# minikube version
# minikube start
# kubectl apply -f kubernetes.yml


# kubectl create namespace juan
# kubectl config set-context --current --namespace=juan
# kubectl config view --minify | grep namespace
# kubectl get all --all --namespace=juan
# kubectl delete all --all --namespace=juan


# kubectl apply -f namespace.yml
#apiVersion: v1
#kind: Namespace
#metadata:
#  name: juan
#---
# kubectl apply -f deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: person-be-1
  namespace: juan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: person-be
  template:
    metadata:
      labels:
        app: person-be
    spec:
      containers:
      - name: person-be
        image: juan321/ms_person_be:latest
        ports:
        - containerPort: 8081  # Puerto que expone el contenedor
        #resources:
        #  requests:
        #    memory: "64Mi"
        #    cpu: "125m"
        #  limits:
        #    memory: "128Mi"
        #    cpu: "300m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-be-1
  namespace: juan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-be
  template:
    metadata:
      labels:
        app: product-be
    spec:
      containers:
      - name: product-be
        image: juan321/ms_product_be:latest
        ports:
        - containerPort: 8082  # Puerto que expone el contenedor
        #resources:
        #  requests:
        #    memory: "64Mi"
        #    cpu: "125m"
        #  limits:
        #    memory: "128Mi"
        #    cpu: "300m"
---
# kubectl apply -f service.yml
apiVersion: v1
kind: Service
metadata:
  name: person-be-11
  namespace: juan
spec:
  selector:
    app: person-be
  ports:
    - protocol: TCP
      port: 8081  # Puerto expuesto por el Service
      targetPort: 8081  # Puerto en el contenedor
      #nodePort: 30001
  type: NodePort  # Puedes usar ClusterIP, NodePort, o LoadBalancer según tus necesidades
---
apiVersion: v1
kind: Service
metadata:
  name: product-be-11
  namespace: juan
spec:
  selector:
    app: product-be
  ports:
    - protocol: TCP
      port: 8082  # Puerto expuesto por el Service
      targetPort: 8082  # Puerto en el contenedor
      #nodePort: 30002
  type: NodePort  # Puedes usar ClusterIP, NodePort, o LoadBalancer según tus necesidades
